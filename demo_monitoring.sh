#!/bin/bash

echo "======================================"
echo "ü§ñ Aurelia Autonomous Agent Demo"
echo "======================================"
echo ""
echo "üìä System Status:"
echo "----------------"

# Check if kernel is running
if pgrep -f "target/release/kernel" > /dev/null; then
    echo "‚úÖ Autonomous Agent: RUNNING"
    KERNEL_PID=$(pgrep -f "target/release/kernel")
    echo "   PID: $KERNEL_PID"
else
    echo "‚ùå Autonomous Agent: NOT RUNNING"
    echo ""
    echo "Starting the agent..."
    ./target/release/kernel > aurelia_output.log 2>&1 &
    KERNEL_PID=$!
    echo "   Started with PID: $KERNEL_PID"
    sleep 5
fi

echo ""
echo "üìà Monitoring Service:"
echo "---------------------"
echo "   Port: 3030"
echo "   Dashboard: http://localhost:3030/dashboard (simplified version)"
echo ""

echo "üîç Recent Activity:"
echo "------------------"
tail -20 aurelia_output.log | grep -E "(INFO|monitoring|decision|task|replication)" | tail -10

echo ""
echo "üìä Agent Behavior Analysis:"
echo "--------------------------"
echo ""
echo "The autonomous agent is demonstrating the following behaviors:"
echo ""
echo "1. üß† DECISION MAKING"
echo "   - Analyzing system health every 30 seconds"
echo "   - Making autonomous deployment decisions"
echo "   - Current decision: Attempting to expand network to 192.168.1.101-103"
echo ""
echo "2. üîÑ SELF-REPLICATION"
echo "   - Minimum replicas required: 2"
echo "   - Currently attempting to deploy to multiple servers"
echo "   - Auto-retry on failure with exponential backoff"
echo ""
echo "3. üìä MONITORING"
echo "   - Collecting system metrics every 5 seconds"
echo "   - Tracking: CPU, Memory, Tasks, Network I/O"
echo "   - Current agents monitored: 1 (localhost)"
echo ""
echo "4. üóìÔ∏è TASK SCHEDULING"
echo "   - Health checks scheduled every 30 seconds"
echo "   - Replication checks scheduled every 60 seconds"
echo "   - Priority-based task execution"
echo ""
echo "5. üõ°Ô∏è SELF-HEALING"
echo "   - Monitoring for failures"
echo "   - Automatic recovery strategies"
echo "   - Failover to backup nodes when needed"
echo ""

echo "======================================"
echo "üìù Multi-Server Deployment Behavior:"
echo "======================================"
echo ""
echo "When encountering multiple undeployed servers, Aurelia will:"
echo ""
echo "1. DISCOVER - Parallel scan all configured servers"
echo "2. ASSESS - Score servers by latency, resources, location"
echo "3. DECIDE - Choose strategy based on server count:"
echo "   ‚Ä¢ < 3 servers: Parallel deployment"
echo "   ‚Ä¢ 3-10 servers: Progressive deployment"
echo "   ‚Ä¢ > 10 servers: Priority-based deployment"
echo "4. DEPLOY - Execute chosen strategy with retry logic"
echo "5. ORGANIZE - Auto-assign roles (Leader/Worker/Monitor)"
echo "6. MONITOR - Track health and performance continuously"
echo ""

echo "======================================"
echo "üíª Commands:"
echo "======================================"
echo ""
echo "View logs:          tail -f aurelia_output.log"
echo "Stop agent:         pkill -f kernel"
echo "Check monitoring:   tail -f aurelia_output.log | grep monitoring"
echo "View decisions:     grep 'decision' aurelia_output.log | tail -10"
echo ""
echo "======================================"