# 使用预构建的 GitHub Actions Runner 镜像
# 这个方案避免了从 Ubuntu 基础镜像构建

# 尝试使用 GitHub 官方镜像或其他可用镜像
FROM myoung34/github-runner:latest

# 如果上面的镜像不可用，可以尝试:
# FROM summerwind/actions-runner:latest
# 或
# FROM tcardonne/github-runner:latest

# 设置环境变量
ENV RUNNER_ALLOW_RUNASROOT=1
ENV DEBIAN_FRONTEND=noninteractive

# 切换到 root 用户安装额外依赖
USER root

# 使用国内镜像源
RUN if [ -f /etc/apt/sources.list ]; then \
        sed -i 's/archive.ubuntu.com/mirrors.aliyun.com/g' /etc/apt/sources.list && \
        sed -i 's/security.ubuntu.com/mirrors.aliyun.com/g' /etc/apt/sources.list; \
    fi

# 安装额外的工具（如果需要）
RUN apt-get update || true && \
    apt-get install -y --no-install-recommends \
        curl wget git jq python3 python3-pip || true && \
    rm -rf /var/lib/apt/lists/* || true

# 安装 Rust（使用国内镜像）
ENV RUSTUP_DIST_SERVER=https://mirrors.ustc.edu.cn/rust-static
ENV RUSTUP_UPDATE_ROOT=https://mirrors.ustc.edu.cn/rust-static/rustup

RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain stable || true

# 配置 Cargo 镜像
RUN mkdir -p ~/.cargo && \
    echo '[source.crates-io]' > ~/.cargo/config.toml && \
    echo 'replace-with = "ustc"' >> ~/.cargo/config.toml && \
    echo '[source.ustc]' >> ~/.cargo/config.toml && \
    echo 'registry = "sparse+https://mirrors.ustc.edu.cn/crates.io-index/"' >> ~/.cargo/config.toml || true

# 复制自定义入口脚本（如果有）
COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh || true

# 设置工作目录
WORKDIR /home/runner

# 使用自定义入口点或默认入口点
ENTRYPOINT ["/entrypoint.sh"]
# 如果自定义脚本不存在，使用默认的
# ENTRYPOINT ["/entrypoint.sh"]