# GitHub Actions Self-Hosted Runner for Aurelia (China Optimized)
FROM ubuntu:22.04

# Prevent interactive prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive
ENV RUNNER_ALLOW_RUNASROOT=1

# 使用国内镜像源（阿里云）
RUN sed -i 's@//.*archive.ubuntu.com@//mirrors.aliyun.com@g' /etc/apt/sources.list && \
    sed -i 's@//.*security.ubuntu.com@//mirrors.aliyun.com@g' /etc/apt/sources.list && \
    sed -i 's@http://.*archive.ubuntu.com@http://mirrors.aliyun.com@g' /etc/apt/sources.list && \
    sed -i 's@http://.*security.ubuntu.com@http://mirrors.aliyun.com@g' /etc/apt/sources.list

# 更新并安装基础依赖（添加重试机制）
RUN apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get update --fix-missing && \
    apt-get install -y --no-install-recommends \
    curl \
    wget \
    git \
    jq \
    build-essential \
    libssl-dev \
    libffi-dev \
    python3 \
    python3-pip \
    python3-venv \
    python3-dev \
    zip \
    unzip \
    sudo \
    ca-certificates \
    gnupg \
    lsb-release \
    pkg-config \
    openssh-client \
    && rm -rf /var/lib/apt/lists/*

# 安装 Docker CLI（使用国内镜像）
RUN curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null && \
    apt-get update && \
    apt-get install -y --no-install-recommends docker-ce-cli && \
    rm -rf /var/lib/apt/lists/*

# 配置 Rust（使用国内镜像）
ENV RUSTUP_DIST_SERVER=https://mirrors.ustc.edu.cn/rust-static
ENV RUSTUP_UPDATE_ROOT=https://mirrors.ustc.edu.cn/rust-static/rustup
ENV RUSTUP_HOME=/opt/rust
ENV CARGO_HOME=/opt/rust
ENV PATH=/opt/rust/bin:$PATH

# 安装 Rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain stable --profile minimal && \
    rustup component add rustfmt clippy && \
    rustup target add x86_64-unknown-linux-gnu && \
    rustup target add aarch64-unknown-linux-gnu

# 配置 Cargo 使用国内镜像
RUN mkdir -p /opt/rust && \
    cat > /opt/rust/config.toml << 'EOF'
[source.crates-io]
replace-with = 'ustc'

[source.ustc]
registry = "sparse+https://mirrors.ustc.edu.cn/crates.io-index/"

[net]
git-fetch-with-cli = true
retry = 3
EOF

# 安装 cross（使用国内镜像）
RUN cargo install cross --version 0.2.5

# 配置 pip 使用国内镜像
RUN pip3 config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple && \
    pip3 config set global.trusted-host pypi.tuna.tsinghua.edu.cn

# 安装 Python 依赖
RUN pip3 install --no-cache-dir \
    requests \
    paramiko \
    pyyaml \
    python-dotenv

# 创建 runner 用户
RUN useradd -m -s /bin/bash runner && \
    usermod -aG sudo runner && \
    echo "runner ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# 创建工作目录
WORKDIR /home/runner

# 下载 GitHub Actions runner（使用代理或镜像）
ARG RUNNER_VERSION=2.311.0
ENV RUNNER_VERSION=${RUNNER_VERSION}

# 尝试从 GitHub 下载，如果失败则使用备用源
RUN for i in 1 2 3; do \
        echo "Attempt $i to download runner..." && \
        curl -L -o actions-runner.tar.gz \
            "https://github.com/actions/runner/releases/download/v${RUNNER_VERSION}/actions-runner-linux-x64-${RUNNER_VERSION}.tar.gz" && \
        break || \
        (echo "Download failed, retrying..." && sleep 5); \
    done && \
    if [ ! -f actions-runner.tar.gz ]; then \
        echo "Failed to download runner after 3 attempts" && exit 1; \
    fi && \
    tar xzf actions-runner.tar.gz && \
    rm actions-runner.tar.gz && \
    ./bin/installdependencies.sh

# 复制启动脚本
COPY entrypoint.sh /home/runner/entrypoint.sh
RUN chmod +x /home/runner/entrypoint.sh

# 设置 Cargo 缓存目录
ENV CARGO_HOME=/home/runner/.cargo
RUN mkdir -p /home/runner/.cargo && \
    cp /opt/rust/config.toml /home/runner/.cargo/config.toml

# 预安装常用 Rust 工具
RUN cargo install cargo-cache cargo-audit || true

# 清理
RUN apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
    rm -rf /root/.cache

# 标签
LABEL maintainer="Aurelia Team"
LABEL description="GitHub Actions self-hosted runner for Aurelia (China Optimized)"
LABEL version="1.0.0"

ENTRYPOINT ["/home/runner/entrypoint.sh"]