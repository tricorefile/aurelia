version: '3.8'

services:
  runner-1:
    build:
      context: .
      dockerfile: Dockerfile.cn  # 使用中国优化版 Dockerfile
      args:
        RUNNER_VERSION: 2.311.0
      # 添加构建时的网络配置
      network: host
    container_name: aurelia-runner-1
    environment:
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GITHUB_OWNER=tricorefile
      - GITHUB_REPOSITORY=aurelia
      - RUNNER_NAME=docker-runner-cn-1
      - RUNNER_LABELS=self-hosted,linux,x64,docker,aurelia,china,prod
      - RUNNER_WORKDIR=/home/runner/work
      # 添加代理配置（如果需要）
      - HTTP_PROXY=${HTTP_PROXY:-}
      - HTTPS_PROXY=${HTTPS_PROXY:-}
      - NO_PROXY=localhost,127.0.0.1,mirrors.aliyun.com,mirrors.ustc.edu.cn
    volumes:
      # Docker socket
      - /var/run/docker.sock:/var/run/docker.sock
      # 持久化 Cargo 缓存
      - cargo-cache:/home/runner/.cargo
      # 持久化构建缓存
      - build-cache:/home/runner/work
      # SSH 密钥
      - ./ssh:/home/runner/.ssh:ro
    restart: unless-stopped
    networks:
      - runner-network
    # 资源限制
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G
    # 健康检查
    healthcheck:
      test: ["CMD", "pgrep", "-f", "Runner.Listener"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  runner-2:
    build:
      context: .
      dockerfile: Dockerfile.cn
      args:
        RUNNER_VERSION: 2.311.0
      network: host
    container_name: aurelia-runner-2
    environment:
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GITHUB_OWNER=tricorefile
      - GITHUB_REPOSITORY=aurelia
      - RUNNER_NAME=docker-runner-cn-2
      - RUNNER_LABELS=self-hosted,linux,x64,docker,aurelia,china,prod
      - RUNNER_WORKDIR=/home/runner/work
      - HTTP_PROXY=${HTTP_PROXY:-}
      - HTTPS_PROXY=${HTTPS_PROXY:-}
      - NO_PROXY=localhost,127.0.0.1,mirrors.aliyun.com,mirrors.ustc.edu.cn
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - cargo-cache:/home/runner/.cargo
      - build-cache-2:/home/runner/work
      - ./ssh:/home/runner/.ssh:ro
    restart: unless-stopped
    networks:
      - runner-network
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G
    healthcheck:
      test: ["CMD", "pgrep", "-f", "Runner.Listener"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  runner-test:
    build:
      context: .
      dockerfile: Dockerfile.cn
      args:
        RUNNER_VERSION: 2.311.0
      network: host
    container_name: aurelia-runner-test
    environment:
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GITHUB_OWNER=tricorefile
      - GITHUB_REPOSITORY=aurelia
      - RUNNER_NAME=docker-runner-cn-test
      - RUNNER_LABELS=self-hosted,linux,x64,docker,aurelia,china,test
      - RUNNER_WORKDIR=/home/runner/work
      - HTTP_PROXY=${HTTP_PROXY:-}
      - HTTPS_PROXY=${HTTPS_PROXY:-}
      - NO_PROXY=localhost,127.0.0.1,mirrors.aliyun.com,mirrors.ustc.edu.cn
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - cargo-cache:/home/runner/.cargo
      - build-cache-test:/home/runner/work
      - ./ssh:/home/runner/.ssh:ro
    restart: unless-stopped
    networks:
      - runner-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G
    healthcheck:
      test: ["CMD", "pgrep", "-f", "Runner.Listener"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  cargo-cache:
    driver: local
  build-cache:
    driver: local
  build-cache-2:
    driver: local
  build-cache-test:
    driver: local

networks:
  runner-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16