name: Simple Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build - ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Native builds (no cross-compilation)
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: linux-x86_64
          
          # Skipping macOS builds
          # - os: macos-latest
          #   target: x86_64-apple-darwin
          #   name: macos-x86_64
          
          # - os: macos-latest
          #   target: aarch64-apple-darwin  
          #   name: macos-aarch64
          
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: windows-x86_64

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev

      - name: Create test .env file
        run: |
          echo "BINANCE_API_KEY=test_key" > .env
          echo "BINANCE_API_SECRET=test_secret" >> .env

      - name: Build
        run: cargo build --release --target ${{ matrix.target }} --bin kernel

      - name: Package (Unix)
        if: runner.os != 'Windows'
        run: |
          cd target/${{ matrix.target }}/release
          tar czf ../../../aurelia-${{ matrix.name }}.tar.gz kernel
          cd ../../../
          ls -la aurelia-*.tar.gz

      - name: Package (Windows)
        if: runner.os == 'Windows'
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          7z a ../../../aurelia-${{ matrix.name }}.zip kernel.exe
          cd ../../../
          ls -la aurelia-*.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: aurelia-${{ matrix.name }}
          path: aurelia-${{ matrix.name }}.*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*
          body: |
            # Aurelia Release
            
            ## Downloads
            - Linux x86_64: `aurelia-linux-x86_64.tar.gz`
            - Windows: `aurelia-windows-x86_64.zip`
            
            ## Installation
            ```bash
            # Linux/macOS
            tar xzf aurelia-*.tar.gz
            chmod +x kernel
            ./kernel
            
            # Windows
            # Extract zip and run kernel.exe
            ```
          draft: false
          prerelease: false