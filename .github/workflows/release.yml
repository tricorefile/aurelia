name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for release'
        required: false
        default: 'manual-release'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build Ubuntu Linux
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: linux-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            linux-cargo-registry-

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: linux-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            linux-cargo-index-

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: linux-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            linux-cargo-build-target-

      - name: Create test .env file
        run: |
          echo "BINANCE_API_KEY=test_key" > .env
          echo "BINANCE_API_SECRET=test_secret" >> .env

      - name: Build binary
        run: |
          cargo build --verbose --release --target x86_64-unknown-linux-gnu --bin kernel

      - name: Package binary
        run: |
          cd target/x86_64-unknown-linux-gnu/release
          tar czf ../../../aurelia-linux-x86_64.tar.gz kernel
          cd -

      - name: Generate SHA256
        run: |
          sha256sum aurelia-linux-x86_64.tar.gz > aurelia-linux-x86_64.tar.gz.sha256

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: aurelia-linux-x86_64
          path: |
            aurelia-linux-x86_64.tar.gz
            aurelia-linux-x86_64.tar.gz.sha256

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    permissions:
      contents: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List artifacts
        run: ls -R artifacts

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name || github.event.inputs.tag_name }}
          name: Release ${{ github.ref_name || github.event.inputs.tag_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            # Aurelia Release
            
            ## Download
            
            - `aurelia-linux-x86_64.tar.gz` - Ubuntu/Debian Linux x86_64
            
            ## Installation
            
            ```bash
            # Download
            wget https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name || github.event.inputs.tag_name }}/aurelia-linux-x86_64.tar.gz
            
            # Extract
            tar xzf aurelia-linux-x86_64.tar.gz
            
            # Make executable
            chmod +x kernel
            
            # Run
            ./kernel
            ```
            
            ## Verify Integrity
            
            ```bash
            sha256sum -c aurelia-linux-x86_64.tar.gz.sha256
            ```
          draft: false
          prerelease: false
          files: |
            artifacts/**/*.tar.gz
            artifacts/**/*.sha256